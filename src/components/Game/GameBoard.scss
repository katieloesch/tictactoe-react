.grid-container {

    .grid {

        width: 100%;
        height: 100%;
        display: grid;
        justify-content: center;
        align-content: center;
        justify-items: center;
        grid-template-columns: repeat(3, auto);
        position: relative;

        .cell {
            width: var(--cell-size);
            height: var(--cell-size);
            border: 4px solid white;
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
            cursor: pointer;
        }


        /* removing the outside border of the grid */
        .cell:nth-child(1), .cell:nth-child(2), .cell:nth-child(3) {
            border-top: none;
        }
        .cell:nth-child(3n+3) {
            border-right: none;   
        }
        .cell:nth-child(9), .cell:nth-child(8), .cell:nth-child(7) {
            border-bottom: none;
        }
        .cell:nth-child(3n+1) {
            border-left: none;   
        }
    }

    /* x symbol */
    .cell.x::before, 
    .cell.x::after, 
    .grid.x .cell:not(.x):not(.o):hover::before,
    .grid.x .cell:not(.x):not(.o):hover::after  {
        content: '';
        position: absolute;
        width: calc(var(--icon-size) * .15);
        height: var(--icon-size);
        background-color: white;
        border-radius: 10px;
    }

    .cell.x::before,
    .grid.x .cell:not(.x):not(.o):hover::before {
        transform: rotate(45deg);
    }
    .cell.x::after,
    .grid.x .cell:not(.x):not(.o):hover::after {
        transform: rotate(-45deg);
    }

    /*  o symbol */
    .cell.o::before,
    .cell.o::after,
    .grid.o .cell:not(.x):not(.o):hover::before,
    .grid.o .cell:not(.x):not(.o):hover::after  {
        content: '';
        position: absolute;
        border-radius: 50%;    
    }

    /* larger circle i.e. "outside" circle */
    .cell.o::before,
    .grid.o .cell:not(.x):not(.o):hover::before {
        width: calc(var(--icon-size)* 0.9);
        height: calc(var(--icon-size)* 0.9);  
    }

    /* slightly smaller circle i.e. "inside" circle */
    .cell.x::before, .cell.x::after {
        background-color: var(--x-color, white);
    }

    .cell.o::before  {
        background-color: var(--o-color, white);
    }

    /* preview lighter symbol when user hovers over empty cell */
    .grid.x .cell:not(.x):not(.o):hover::before,
    .grid.x .cell:not(.x):not(.o):hover::after,
    .grid.o .cell:not(.x):not(.o):hover::before {
        background-color: rgb(47, 47, 47);
    }

    .cell.o::before,
    .grid.o .cell:not(.x):not(.o):hover::before {
        width: calc(var(--icon-size)* 0.9);
        height: calc(var(--icon-size)* 0.9);  
    }

    .cell.o::after,
    .grid.o .cell:not(.x):not(.o):hover::after {
        width: calc(var(--icon-size)* 0.6);
        height: calc(var(--icon-size)* 0.6);
        background-color: black;
    }

    /* when cursor moves over cell that already has an x or o it changes to signal to user that cell is not available */
    .cell.x, .cell.o {
        cursor: not-allowed;
    }

    .overlay-start-game-btns {
        position: absolute;
        background-color: black;
        display: flex;
        flex-direction: column;
        gap: 25px;
        font-size: 1.75rem;
        padding: 25px;
        border: 1px solid white;
        border-radius: 10px;

        .btn.start-game {
            font-size: 1.8rem;
            background-color: black;
            border: 2px solid white;
            color:  white;
            padding: 0.5rem;
            cursor: pointer;
            border-radius: 8px;
     
            &:hover {
             background-color: rgb(152, 201, 146);
             border: 2px solid rgb(26, 60, 18);
             color: rgb(26, 60, 18);
             transition: 0.75s;
            }
         
         }

    }

    
}
    